# Generated by Django 3.2.4 on 2024-02-05 20:04

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Asignacion',
            fields=[
                ('id_Asignacion', models.AutoField(db_column='id_Asignacion', primary_key=True, serialize=False)),
                ('fk_Alumno', models.ForeignKey(db_column='fk_Alumno', on_delete=django.db.models.deletion.PROTECT, related_name='asignacion_alumno', to=settings.AUTH_USER_MODEL)),
                ('fk_Docente', models.ForeignKey(db_column='fk_Docente', on_delete=django.db.models.deletion.PROTECT, related_name='asignacion_docente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Asignacion',
            },
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id_Grupo', models.AutoField(db_column='id_Grupo', primary_key=True, serialize=False)),
                ('Grupo', models.CharField(db_column='Grupo', default='Grupo', max_length=10, unique=True)),
            ],
            options={
                'db_table': 'Grupo',
            },
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('id_Materia', models.AutoField(db_column='id_Materia', primary_key=True, serialize=False)),
                ('Materia', models.CharField(db_column='Materia', default='Materia', max_length=45)),
                ('Clave', models.CharField(db_column='Clave', default='Clave', max_length=10, unique=True)),
                ('No_creditos', models.IntegerField(db_column='No_creditos', default=1)),
            ],
            options={
                'db_table': 'Materia',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id_Rol', models.AutoField(db_column='Id_Rol', primary_key=True, serialize=False)),
                ('Rol', models.CharField(db_column='Rol', default='Rol', max_length=20, unique=True)),
            ],
            options={
                'db_table': 'Rol',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id_Status', models.AutoField(db_column='id_Status', primary_key=True, serialize=False)),
                ('Status', models.CharField(db_column='Status', default='Status', max_length=15, unique=True)),
            ],
            options={
                'db_table': 'Status',
            },
        ),
        migrations.CreateModel(
            name='Periodo',
            fields=[
                ('id_Periodo', models.AutoField(db_column='id_Periodo', primary_key=True, serialize=False)),
                ('Periodo', models.CharField(db_column='Periodo', default='Periodo', max_length=10, unique=True)),
                ('fk_Status', models.ForeignKey(db_column='fk_Status', on_delete=django.db.models.deletion.PROTECT, to='api.status')),
            ],
            options={
                'db_table': 'Periodo',
            },
        ),
        migrations.CreateModel(
            name='Calificacion',
            fields=[
                ('id_Calificacion', models.AutoField(db_column='id_Calificacion', primary_key=True, serialize=False)),
                ('Parcial_1', models.FloatField(db_column='Parcial_1', default=0.0)),
                ('Parcial_2', models.FloatField(db_column='Parcial_2', default=0.0)),
                ('Parcial_3', models.FloatField(db_column='Parcial_3', default=0.0)),
                ('fk_Asignacion', models.ForeignKey(db_column='fk_Asignacion', on_delete=django.db.models.deletion.PROTECT, to='api.asignacion')),
            ],
            options={
                'db_table': 'Calificacion',
            },
        ),
        migrations.AddField(
            model_name='asignacion',
            name='fk_Grupo',
            field=models.ForeignKey(db_column='fk_Grupo', on_delete=django.db.models.deletion.PROTECT, to='api.grupo'),
        ),
        migrations.AddField(
            model_name='asignacion',
            name='fk_Materia',
            field=models.ForeignKey(db_column='fk_Materia', on_delete=django.db.models.deletion.PROTECT, to='api.materia'),
        ),
        migrations.AddField(
            model_name='asignacion',
            name='fk_Periodo',
            field=models.ForeignKey(db_column='fk_Periodo', on_delete=django.db.models.deletion.PROTECT, to='api.periodo'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='fk_Rol',
            field=models.ForeignKey(db_column='fk_Rol', on_delete=django.db.models.deletion.PROTECT, to='api.rol'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='fk_Status',
            field=models.ForeignKey(db_column='fk_Status', on_delete=django.db.models.deletion.PROTECT, to='api.status'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
